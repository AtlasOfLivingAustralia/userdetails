---
version: '3.8'

# TODO: postfix

services:
  cas:
    container_name: cas
    image: livingatlases/cas:latest
    pull_policy: if_not_present
    # Restart until dependencies are up (cas is slow starting)
    restart: always

    ports:
      - 9280:9000
    volumes:
      - /data:/data

  userdetails:
    container_name: userdetails
    image: livingatlases/userdetails:latest
    pull_policy: if_not_present
    # Restart until dependencies are up (cas is slow starting)
    restart: always
    ports:
      - 9281:9001
    volumes:
      - /data:/data

  cas-management:
    container_name: cas-management
    image: livingatlases/cas-management:latest
    pull_policy: if_not_present
    # Restart until dependencies are up (cas is slow starting)
    restart: always
    ports:
      - 9282:8070
    volumes:
      - /data:/data

  mongo:
    container_name: auth-mongo
    image: mongo:5
    volumes:
      - /data/auth/mongo-data:/data/db
      - /data/auth/mongo/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    ports:
      - 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_password
      CAS_TICKETS_USERNAME: tickets
      CAS_TICKETS_PASSWORD: cas_tickets_password
      CAS_SERVICES_USERNAME: services
      CAS_SERVICES_PASSWORD: cas_services_password
      CAS_AUDIT_USERNAME: casprod
      CAS_AUDIT_PASSWORD: cas_audit_password
      CAS_SPRING_SESSION_USERNAME: sessions
      CAS_SPRING_SESSION_PASSWORD: cas_spring_session_password

      COLLECTORY_CLIENT_ID: ''
      COLLECTORY_CLIENT_SECRET: ''
      COLLECTORY_BASE_URL: ''
      COLLECTORY_CONTEXT_PATH: ''

      ALA_HUB_CLIENT_ID: ''
      ALA_HUB_CLIENT_SECRET: ''
      BIOCACHE_HUB_BASE_URL: ''
      BIOCACHE_HUB_CONTEXT_PATH: ''

      BIOCACHE_SERVICE_CLIENT_ID: ''
      BIOCACHE_SERVICE_CLIENT_SECRET: ''
      BIOCACHE_SERVICE_BASE_URL: ''
      BIOCACHE_SERVICE_CONTEXT_PATH: ''

      ALA_BIE_CLIENT_ID: ''
      ALA_BIE_CLIENT_SECRET: ''
      BIE_HUB_BASE_URL: ''
      BIE_HUB_CONTEXT_PATH: ''

      BIE_INDEX_CLIENT_ID: ''
      BIE_INDEX_CLIENT_SECRET: ''
      BIE_INDEX_BASE_URL: ''
      BIE_INDEX_CONTEXT_PATH: ''

      IMAGES_CLIENT_ID: ''
      IMAGES_CLIENT_SECRET: ''
      IMAGE_SERVICE_BASE_URL: ''
      IMAGE_SERVICE_CONTEXT_PATH: ''

      LOGGER_CLIENT_ID: ''
      LOGGER_CLIENT_SECRET: ''
      LOGGER_BASE_URL: ''
      LOGGER_CONTEXT_PATH: ''

      LISTS_CLIENT_ID: ''
      LISTS_CLIENT_SECRET: ''
      LISTS_BASE_URL: ''
      LISTS_CONTEXT_PATH: ''

      REGIONS_CLIENT_ID: ''
      REGIONS_CLIENT_SECRET: ''
      REGIONS_BASE_URL: ''
      REGIONS_CONTEXT_PATH: ''

      ALERTS_CLIENT_ID: ''
      ALERTS_CLIENT_SECRET: ''
      ALERTS_BASE_URL: ''
      ALERTS_CONTEXT_PATH: ''

      DOI_CLIENT_ID: ''
      DOI_CLIENT_SECRET: ''
      DOI_SERVICE_URL: ''
      DOI_SERVICE_CONTEXT_PATH: ''

      DASHBOARD_CLIENT_ID: ''
      DASHBOARD_CLIENT_SECRET: ''
      DASHBOARD_BASE_URL: ''
      DASHBOARD_CONTEXT_PATH: ''

      SDS_CLIENT_ID: ''
      SDS_CLIENT_SECRET: ''
      SDS_URL: ''
      SDS_CONTEXT_PATH: ''

      SPATIAL_CLIENT_ID: ''
      SPATIAL_CLIENT_SECRET: ''
      SPATIAL_BASE_URL: ''
      SPATIAL_HUB_CONTEXT_PATH: ''

      DATA_QUALITY_CLIENT_ID: ''
      DATA_QUALITY_CLIENT_SECRET: ''
      DATA_QUALITY_URL: ''
      DATA_QUALITY_CONTEXT_PATH: ''

      BIOCOLLECT_CLIENT_ID: ''
      BIOCOLLECT_CLIENT_SECRET: ''
      BIOCOLLECT_BASE_URL: ''
      BIOCOLLECT_CONTEXT_PATH: ''

      ECODATA_CLIENT_ID: ''
      ECODATA_CLIENT_SECRET: ''
      ECODATA_BASE_URL: ''
      ECODATA_CONTEXT_PATH: ''

  # Only for development
  mongo-express:
    container_name: auth-mongo-express
    image: mongo-express
    restart: always
    ports:
      - 9283:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin_password

  mysql:
    container_name: auth-mysql
    image: mysql:5.7
    ports:
      - 3306
    volumes:
      - /data/auth/mysql-data:/var/lib/mysql
      - /data/auth/mysql/init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
    # TODO First admin add and def roles

  postfix:
    image: boky/postfix
    container_name: auth-postfix
    ports:
      - 25
    environment:
      HOSTNAME: auth-postfix.l-a.site
      RELAYHOST: Host that relays your msgs
      RELAYHOST_USERNAME: some-user
      RELAYHOST_PASSWORD: password
      ALLOWED_SENDER_DOMAINS: l-a.site

networks:
  default:
    name: auth
