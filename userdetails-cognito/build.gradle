buildscript {
    version "4.1-SNAPSHOT"
    group "au.org.ala"
    description "Userdetails cognito application"
}

plugins {
    id "groovy"
    id "org.grails.grails-web" version "6.0.0"
    id "org.grails.grails-gsp" version "6.0.0"
    id "application"
    id "war"
    id "maven-publish"
    id "com.bertramlabs.asset-pipeline" version "4.3.0"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom implementation
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

application {
    mainClassName = 'au.org.ala.userdetails.cognito.Application'
}


repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    mavenCentral()
}


dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:events"
    runtimeOnly 'org.ehcache:ehcache'
    implementation "org.grails.plugins:gsp"
    profile "org.grails.profiles:web"
    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:4.3.0"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:4.0.0"
    testImplementation "org.seleniumhq.selenium:selenium-api:4.0.0"
    testImplementation "org.seleniumhq.selenium:selenium-support:4.0.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:4.0.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:4.0.0"

    // Base userdetails plugin
    implementation project(':userdetails-plugin')

    // regular JAR dependencies
    implementation 'com.amazonaws:aws-java-sdk-cognitoidentity:1.12.447'
    implementation 'com.amazonaws:aws-java-sdk-cognitoidp:1.12.447'
    implementation 'com.amazonaws:aws-java-sdk-cognitosync:1.12.447'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.447'

}

springBoot {
    buildInfo()
    mainClassName = 'au.org.ala.userdetails.cognito.Application'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, "seconds"
}


bootRun {
    classpath = sourceSets.main.runtimeClasspath
    mainClassName = 'au.org.ala.userdetails.cognito.Application'
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

bootWar {
    launchScript()
    classifier = 'exec'
    dependsOn(compileGroovyPages)
}

war {
    dependsOn(compileGroovyPages)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}


tasks.withType(JavaExec) {
    classpath = configurations.runtimeClasspath
}


tasks.withType(Test) {
    useJUnitPlatform()
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    if (!System.getenv().containsKey('GITHUB_ACTIONS')) {
        systemProperty 'webdriver.chrome.driver', System.getProperty('webdriver.chrome.driver')
        systemProperty 'webdriver.gecko.driver', System.getProperty('webdriver.gecko.driver')
    } else {
        systemProperty 'webdriver.chrome.driver', "${System.getenv('CHROMEWEBDRIVER')}/chromedriver"
        systemProperty 'webdriver.gecko.driver', "${System.getenv('GECKOWEBDRIVER')}/geckodriver"
    }
}


assets {
    minifyJs = true
    minifyCss = true
}

publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        mavenJar(MavenPublication) {
            artifact bootWar
        }
    }
}
